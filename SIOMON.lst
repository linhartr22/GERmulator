0000                             ;*****
0000                             ;* Equates
0000                             ;*
0000                NUL:      EQU   $00   
0000                BEL:      EQU   $07   
0000                BS:       EQU   $08   
0000                HT:       EQU   $09   
0000                LF:       EQU   $0A   
0000                FF:       EQU   $0C   
0000                CR:       EQU   $0D   
0000                ESC:      EQU   $1B   
0000                             ; 
0000                SIODATA:   EQU   $80   
0000                             ; 
0000                SIOST:    EQU   $81   
0000                SIOSTTXRDY:   EQU   $01   
0000                SIOSTRXRDY:   EQU   $02   
0000                SIOSTTXE:   EQU   $04   
0000                             ; 
0000                SIOMO:    EQU   $81   
0000                SIOMOS1:   EQU   $40   
0000                SIOMOS15:   EQU   $80   
0000                SIOMOS2:   EQU   $C0   
0000                SIOMOPE:   EQU   $20   
0000                SIOMOPEN:   EQU   $10   
0000                SIOMOC5:   EQU   $00   
0000                SIOMOC6:   EQU   $04   
0000                SIOMOC7:   EQU   $08   
0000                SIOMOC8:   EQU   $0C   
0000                SIOMOBS:   EQU   $00   
0000                SIOMOB1X:   EQU   $01   
0000                SIOMOB16X:   EQU   $02   
0000                SIOMOB64X:   EQU   $03   
0000                SIOMOI:   EQU   siomos1+siomoc8+siomob16x   
0000                             ; 
0000                SIOCMD:   EQU   $81   
0000                SIOCMDTXEN:   EQU   $01   
0000                SIOCMDDTR:   EQU   $02   
0000                SIOCMDRXEN:   EQU   $04   
0000                SIOCMDER:   EQU   $10   
0000                SIOCMDRTS:   EQU   $20   
0000                SIOCMDIR:   EQU   $40   
0000                SIOCMDI:   EQU   siocmddtr+siocmdrts+siocmdtxen+siocmder   
0000                             ; 
0000                             ;*****
0000                             ;* IRQ Vectors
0000                             ;*
0000                          .ORG   $0000   
0000   C3 00 01               JMP   init   ; RST 0, RESET
0008                          .ORG   $0008   
0008   C3 00 01               JMP   init   ; RST 1
0010                          .ORG   $0010   
0010   C3 00 01               JMP   init   ; RST 2
0018                          .ORG   $0018   
0018   C3 00 01               JMP   init   ; RST 3
0020                          .ORG   $0020   
0020   C3 00 01               JMP   init   ; RST 4
0028                          .ORG   $0028   
0028   C3 00 01               JMP   init   ; RST 5
0030                          .ORG   $0030   
0030   C3 00 01               JMP   init   ; RST 6
0038                          .ORG   $0038   
0038   C3 00 01               JMP   init   ; RST 7
003B                             ; 
003B                             ;*****
003B                             ;* Init
003B                             ;*
0100                          .ORG   $0100   
0100   31 00 FF     INIT:     LXI   sp,spinit   ; Init SP
0103   97           SIOINIT:   SUB   a   ; Clear SIO Init Sequence
0104   D3 81                  OUT   siomo   
0106   D3 81                  OUT   siomo   
0108   D3 81                  OUT   siomo   
010A   3E 40                  MVI   a,siocmdir   ; Send SIO Command Internal Reset
010C   D3 81                  OUT   siocmd   
010E   3E 4E                  MVI   a,siomoi   ; Send SIO Mode Instruction
0110   D3 81                  OUT   siomo   
0112   3E 33                  MVI   a,siocmdi   ; Send SIO Command Instruction
0114   D3 81                  OUT   siocmd   
0116   21 00 1E     MONINIT:   LXI   h,grtmsg   ; Display Greet Message
0119   CD 0C 18               CALL   soutstr   
011C                             ; 
011C                             ;*****
011C                             ;* Main
011C                             ;*
011C   21 33 1E     MAIN:     LXI   h,clmsg   ; Display Prompt
011F   CD 0C 18               CALL   soutstr   
0122   21 00 80               LXI   h,clbuf   ; Get SIO Command Line Buffer Pointer
0125   01 0C 00               LXI   b,clbufe-clbuf   ; Get SIO Command Line Buffer Size (Zeros B - Size in C)
0128   CD 38 18               CALL   sinstr   ; Get SIO Command Line Buffer
012B   7E           PARSE:    MOV   a,m   ; Get First Character
012C   23                     INX   h   ; Inc Buffer Pointer
012D   FE 3F                  CPI   '?'   
012F   CA 4A 01               JZ   help   ; Display Help
0132   FE 44                  CPI   'D'   
0134   CA 53 01               JZ   dump   
0137   FE 45                  CPI   'E'   
0139   CA C3 01               JZ   edit   
013C   FE 47                  CPI   'G'   
013E   CA 20 02               JZ   goto   
0141                             ; 
0141                             ;*****
0141                             ;* Error
0141                             ;*
0141   21 36 1E     ERROR:    LXI   h,errmsg   ; Display Error
0144   CD 0C 18               CALL   soutstr   
0147   C3 1C 01               JMP   main   ; Next Command
014A                             ; 
014A                             ;*****
014A                             ;* Help
014A                             ;*
014A   21 4C 1E     HELP:     LXI   h,hlpmsg   ; Display Help
014D   CD 0C 18               CALL   soutstr   
0150   C3 1C 01               JMP   main   ; Next Command
0153                             ; 
0153                             ;*****
0153                             ;* Dump
0153                             ;* HL = Command Line Buffer
0153                             ;*
0153   CD A9 18     DUMP:     CALL   s2w   ; Get Dump Begin Address
0156   CA 41 01               JZ   error   ; No Digits Found
0159   3E F0                  MVI   a,$0F0   ; Start on 16 Byte Boundry
015B   A3                     ANA   e   
015C   5F                     MOV   e,a   
015D   EB                     XCHG      ; Save Dump Begin Address
015E   22 0D 80               SHLD   addrbeg   
0161   EB                     XCHG      ; Restore Buffer Pointer
0162   CD A9 18               CALL   s2w   ; Get Dump End Address
0165   CA 41 01               JZ   error   ; No Digits Found
0168   3E 0F                  MVI   a,$0F   ; End on 16 Byte Boundry
016A   B3                     ORA   e   
016B   5F                     MOV   e,a   
016C   EB                     XCHG      ; Save Dump End Address
016D   22 0F 80               SHLD   addrend   
0170   21 1D 1F               LXI   h,dumphd   ; Display Dump Header
0173   CD 0C 18               CALL   soutstr   
0176   2A 0D 80     DUMPNL:   LHLD   addrbeg   ; Get Address Pointer
0179   7C                     MOV   a,h   ; Display Address High Byte
017A   CD 16 18               CALL   southexb   
017D   7D                     MOV   a,l   ; Display Address Low Byte
017E   CD 16 18               CALL   southexb   
0181   3E 20                  MVI   a,' '   ; Display Space
0183   CD 00 18               CALL   soutc   
0186   06 10                  MVI   b,16   ; Display 16 Bytes
0188   7E           DUMPBT:   MOV   a,m   ; Get Byte
0189   23                     INX   h   ; Inc Address Pointer
018A   CD 16 18               CALL   southexb   ; Display Byte
018D   3E 20                  MVI   a,' '   ; Display Space
018F   CD 00 18               CALL   soutc   
0192   05                     DCR   b   ; Display Another Byte?
0193   C2 88 01               JNZ   dumpbt   ; Yes
0196   2A 0D 80               LHLD   addrbeg   ; Get Address Pointer
0199   06 10                  MVI   b,16   ; Display 16 Characters
019B   7E           DUMPCH:   MOV   a,m   ; Get Character
019C   23                     INX   h   ; Inc Address Pointer
019D   FE 20                  CPI   ' '   ; Printable Character?
019F   DA A7 01               JC   dumpch1   ; No
01A2   FE 80                  CPI   $80   
01A4   DA A9 01               JC   dumpch2   ; Yes
01A7   3E 2E        DUMPCH1:   MVI   a,'.'   ; Non-Printable Character
01A9   CD 00 18     DUMPCH2:   CALL   soutc   ; Display Character
01AC   05                     DCR   b   ; Display Another Character?
01AD   C2 9B 01               JNZ   dumpch   ; Yes
01B0   CD E7 18               CALL   soutcrlf   ; Display CRLF
01B3   22 0D 80               SHLD   addrbeg   ; Save Dump Begin Address
01B6   EB                     XCHG      
01B7   2A 0F 80               LHLD   addrend   ; Get Dump End Address
01BA   CD F1 18               CALL   cmphlde   ; Dump End >= Dump Begin
01BD   D2 76 01               JNC   dumpnl   ; Yes, Dump Next Line
01C0   C3 1C 01               JMP   main   ; No, Next Command
01C3                             ; 
01C3                             ;*****
01C3                             ;* Edit
01C3                             ;* HL = Command Line Buffer
01C3                             ;*
01C3   CD A9 18     EDIT:     CALL   s2w   ; Get Edit Address
01C6   CA 41 01               JZ   error   ; No Digits Found
01C9   EB                     XCHG      ; Save Edit Address
01CA   22 0D 80               SHLD   addrbeg   
01CD   7C           EDITNL:   MOV   a,h   ; Display Address High Byte
01CE   CD 16 18               CALL   southexb   
01D1   7D                     MOV   a,l   ; Display Address Low Byte
01D2   CD 16 18               CALL   southexb   
01D5   3E 20                  MVI   a,' '   ; Display Space
01D7   CD 00 18               CALL   soutc   
01DA   7E                     MOV   a,m   ; Display Current Byte
01DB   CD 16 18               CALL   southexb   
01DE   3E 2D                  MVI   a,'-'   ; Display Prompt
01E0   CD 00 18               CALL   soutc   
01E3   21 00 80               LXI   h,clbuf   ; Get SIO Command Line Buffer Pointer
01E6   01 02 00               LXI   b,2   ; Get SIO Command Line Buffer Size (Zeros B - Size in C)
01E9   CD 38 18               CALL   sinstr   ; Get SIO Command Line Buffer
01EC   CD A9 18               CALL   s2w   ; Get New Byte
01EF   CA 00 02               JZ   editcmd   ; No Digits Found
01F2   2A 0D 80               LHLD   addrbeg   ; Get Edit Address
01F5   73                     MOV   m,e   ; Save New Byte
01F6   2A 0D 80     EDITNL1:   LHLD   addrbeg   ; Get Edit Address
01F9   23                     INX   h   
01FA   22 0D 80               SHLD   addrbeg   
01FD   C3 CD 01               JMP   editnl   ; Get Next Edit
0200   3A 00 80     EDITCMD:   LDA   clbuf   ; Get Command Line Character
0203   B7                     ORA   a   ; No Change?
0204   CA F6 01               JZ   editnl1   ; Yes, No Change
0207   FE 2E                  CPI   '.'   ; Exit?
0209   CA 1C 01               JZ   main   ; Yes, Next Command
020C   FE 3F                  CPI   '?'   ; Help?
020E   CA 4A 01               JZ   help   ; Yes
0211   21 33 1E               LXI   h,clmsg   ; Display Error Message
0214   CD 0C 18               CALL   soutstr   
0217   CD E7 18               CALL   soutcrlf   
021A   2A 0D 80               LHLD   addrbeg   ; Get Edit Address
021D   C3 F6 01               JMP   editnl1   ; Try Again
0220                             ; 
0220                             ;*****
0220                             ;* GoTo
0220                             ;* HL = Command Line Buffer
0220                             ;*
0220   CD A9 18     GOTO:     CALL   s2w   ; Get GoTo Address
0223   CA 41 01               JZ   error   ; No Digits Found
0226   D5                     PUSH   d   ; Jump to GoTo Address
0227   C9                     RET      
0228                             ; 
0228                             ;*****
0228                             ;= Library
0228                             ;=
1800                          .ORG   $1800   
1800                             ; 
1800                             ;=====
1800                             ;= Serial Output Character in Acc
1800                             ;= Modifies: None
1800   F5           SOUTC:    PUSH   psw   ; Save Char
1801   DB 81                  IN   siost   ; SIO Ready to Tx?
1803   E6 04                  ANI   siosttxe   
1805   CA 00 18               JZ   soutc   ; No, Keep Waiting
1808   F1                     POP   psw   ; Restore Char
1809   D3 80                  OUT   siodata   ; Output Char to SID Data Port
180B   C9                     RET      ; Done
180C                             ; 
180C                             ;=====
180C                             ;= Serial Output String at HL, Null terminated
180C                             ;= Modifies: AF, HL
180C   7E           SOUTSTR:   MOV   a,m   ; Get Char from Buffer
180D   B7                     ORA   a   ; Null?
180E   C8                     RZ   soutstrx   ; Yes, Exit
180F   CD 00 18               CALL   soutc   ; No, Serial Output Char
1812   23                     INX   h   ; Inc Buffer Pointer
1813   C3 0C 18               JMP   soutstr   ; Get Next Char
1816                             ; 
1816                             ;=====
1816                             ;= Serial Output Hex Byte in Acc
1816                             ;= Modifies AF
1816   F5           SOUTHEXB:   PUSH   psw   ; Save Byte
1817   0F                     RRC      ; Get Upper Nibble
1818   0F                     RRC      
1819   0F                     RRC      
181A   0F                     RRC      
181B   E6 0F                  ANI   $0F   ; Mask off Upper Nibble
181D   C6 30                  ADI   '0'   ; Convert to ASCII
181F   FE 3A                  CPI   ':'   ; Hex Adjust?
1821   DA 26 18               JC   southexb1   ; No
1824   C6 07                  ADI   'A'-':'   ; Yes
1826   CD 00 18     SOUTHEXB1:   CALL   soutc   ; Serial Output Char
1829   F1                     POP   psw   ; Restore Char
182A   E6 0F                  ANI   $0F   ; Mask off Upper Nibble
182C   C6 30                  ADI   '0'   ; Convert to ASCII
182E   FE 3A                  CPI   ':'   ; Hex Adjust?
1830   DA 35 18               JC   southexb2   ; No
1833   C6 07                  ADI   'A'-':'   ; Yes
1835   C3 00 18     SOUTHEXB2:   JMP   soutc   ; Serial Output Char
1838                             ; 
1838                             ;=====
1838                             ;= Serial Input String at HL, B=Count, C=Length
1838                             ;= Before calling, set B to 0 when setting C to Length
1838                             ;= Modifies AF, BC, DE, HL
1838   E5           SINSTR:   PUSH   h   ; Save Registers
1839   C5                     PUSH   b   
183A   3E 37                  MVI   a,siocmdi+siocmdrxen   ; Set SIO RX Enable
183C   D3 81                  OUT   siocmd   
183E   36 00        SINSTRCB:   MVI   m,0   ; Clear Buffer
1840   0D                     DCR   c   
1841   C2 3E 18               JNZ   sinstrcb   
1844   C1                     POP   b   ; Restore B=Count, C=Length
1845   E1                     POP   h   ; Restore Buffer Pointer
1846   E5                     PUSH   h   ; Save Buffer Pointer
1847   CD 83 18     SINSTRGC:   CALL   sinc   ; Get Character
184A   57                     MOV   d,a   ; Save Character
184B   FE 0D                  CPI   cr   ; Carriage Return?
184D   CA 76 18               JZ   sinstrx   ; Yes, Exit
1850   FE 08                  CPI   bs   ; Backspace?
1852   CA 69 18               JZ   sinstrbs   ; Yes, Backspace
1855   FE 20                  CPI   ' '   ; Printable Character?
1857   DA 47 18               JC   sinstrgc   ; No, Ignore Character
185A   78                     MOV   a,b   ; Character Counter = Buffer Size?
185B   B9                     CMP   c   
185C   CA 47 18               JZ   sinstrgc   ; Yes, Ignore Character
185F   7A                     MOV   a,d   ; Restore Character
1860   77                     MOV   m,a   ; No, Save Character in Buffer
1861   23                     INX   h   ; Inc Buffer Pointer
1862   04                     INR   b   ; Inc Buffer Count
1863   CD 00 18     SINSTRECHO:   CALL   soutc   ; Echo Character
1866   C3 47 18               JMP   sinstrgc   ; Get Next Character
1869   78           SINSTRBS:   MOV   a,b   ; Count = 0?
186A   B7                     ORA   a   
186B   CA 38 18               JZ   sinstr   ; Yes, Ignore Backspace
186E   2B                     DCX   h   ; Dec Buffer Pointer
186F   05                     DCR   b   ; Dec Character Count
1870   36 20                  MVI   m,' '   ; Erase Character in Buffer
1872   7A                     MOV   a,d   ; Restore Backspace Character
1873   C3 63 18               JMP   sinstrecho   ; Echo Backspace Character
1876   36 00        SINSTRX:   MVI   m,nul   ; Null Terminate Buffer
1878   CD E7 18               CALL   soutcrlf   ; Send CRLF
187B   3E 33                  MVI   a,siocmdi   ; Clear SIO RX Enable
187D   D3 81                  OUT   siocmd   
187F   E1                     POP   h   ; Restore Buffer Pointer
1880   C3 8F 18               JMP   str2upr   ; Convert to Upper Case
1883                             ; 
1883                             ;=====
1883                             ;= Serial Input Character to Acc
1883                             ;= Modifies AF
1883   DB 81        SINC:     IN   siost   ; Character Ready?
1885   E6 02                  ANI   siostrxrdy   
1887   CA 83 18               JZ   sinc   ; No, Keep Waiting
188A   DB 80                  IN   siodata   ; Input Character
188C   E6 7F                  ANI   $7F   ; Make 7-bit ASCII
188E   C9                     RET      
188F                             ; 
188F                             ;=====
188F                             ;= String at HL to Upper Case
188F                             ;= Modifies AF
188F   E5           STR2UPR:   PUSH   h   ; Save String Pointer
1890   7E           STR2UPRN:   MOV   a,m   ; Character = Null?
1891   B7                     ORA   a   
1892   CA A7 18               JZ   str2uprx   ; Yes, Exit
1895   FE 60                  CPI   'a'-1   ; Character Lower Case?
1897   DA A3 18               JC   str2upr1   ; No
189A   FE 7B                  CPI   'z'+1   
189C   D2 A3 18               JNC   str2upr1   ; No
189F   3E E0                  MVI   a,0-('a'-'A')   ; Yes, Make Upper Case
18A1   86                     ADD   m   
18A2   77                     MOV   m,a   
18A3   23           STR2UPR1:   INX   h   ; Inc Pointer
18A4   C3 90 18               JMP   str2uprn   ; Check Next Character
18A7   E1           STR2UPRX:   POP   h   ; Restore String Pointer
18A8   C9                     RET      
18A9                             ; 
18A9                             ;=====
18A9                             ;= Parse Word to DE from String at HL
18A9                             ;= Returns HL Pointing to Next Non-Digit Character
18A9                             ;= Returns Z Digit Found Flag
18A9                             ;= Modifies HL, DE, BC, AF
18A9   11 00 00     S2W:      LXI   d,0   ; Clear Word
18AC   4B                     MOV   c,e   ; Clear Digit Found Flag
18AD   7E           S2WNC:    MOV   a,m   ; Get Character
18AE   B7                     ORA   a   ; Character = Nul?
18AF   CA E4 18               JZ   s2wx   ; Yes, Exit
18B2   D6 30                  SUI   '0'   ; Character < 0?
18B4   DA DF 18               JC   s2wdel   ; Yes, Process Delimeter
18B7   FE 0A                  CPI   9+1   ; Character <= 9?
18B9   DA C8 18               JC   s2wdig   ; Yes, Process Digit
18BC   FE 11                  CPI   'A'-'0'   ; Character < A?
18BE   DA DF 18               JC   s2wdel   ; Yes, Process Delimeter
18C1   D6 07                  SUI   'A'-'9'-1   ; Character <= F?
18C3   FE 10                  CPI   16   
18C5   D2 DF 18               JNC   s2wdel   ; No, Process Delimeter
18C8   0E FF        S2WDIG:   MVI   c,-1   ; Set Digit Found Flag
18CA   F5                     PUSH   psw   ; Save Digit
18CB   06 04                  MVI   b,4   ; Shift DE Left 4 Bits
18CD   B7           S2WDIG1:   ORA   a   ; Clear Carry
18CE   7B                     MOV   a,e   
18CF   17                     RAL      
18D0   5F                     MOV   e,a   
18D1   7A                     MOV   a,d   
18D2   17                     RAL      
18D3   57                     MOV   d,a   
18D4   05                     DCR   b   ; Again?
18D5   C2 CD 18               JNZ   s2wdig1   ; Yes
18D8   F1                     POP   psw   ; Restore Digit
18D9   B3                     ORA   e   ; Save Digit
18DA   5F                     MOV   e,a   
18DB   23           S2WINC:   INX   h   ; Inc String Pointer
18DC   C3 AD 18               JMP   s2wnc   ; Process Next Character
18DF   79           S2WDEL:   MOV   a,c   ; Digit Found?
18E0   B7                     ORA   a   
18E1   CA DB 18               JZ   s2winc   ; No, Keep Looking
18E4   79           S2WX:     MOV   a,c   ; Set Z to Digit Found Flag
18E5   B7                     ORA   a   
18E6   C9                     RET      
18E7                             ; 
18E7                             ;=====
18E7                             ;* Serial Output CRLF
18E7                             ;* Modifies AF
18E7   3E 0D        SOUTCRLF:   MVI   A,cr   ; Display CR
18E9   CD 00 18               CALL   SOUTC   
18EC   3E 0A                  MVI   a,lf   ; Display LF
18EE   C3 00 18               JMP   soutc   
18F1                             ; 
18F1                             ;=====
18F1                             ;* Compare HL to DE
18F1                             ;* Modifies AF
18F1   7D           CMPHLDE:   MOV   a,l   ; Subtract DE from HL
18F2   93                     SUB   e   
18F3   7C                     MOV   a,h   
18F4   9A                     SBB   d   
18F5   C9                     RET      
18F6                             ; 
18F6                             ;*****
18F6                             ;* String Constants
18F6                             ;*
1E00                          .ORG   1E00H   
1E00   0D 0A 0A 47 45 52 6D 6F 6E 20 76 31 2E 30 07 GRTMSG:   DB   cr,lf,lf,'GERmon v1.0',bel   
1E0F   20 20 20 52 6F 67 65 72 20 44 2E 20 4C 69 6E 68 61 72 74 07 DB   '   Roger D. Linhart',bel   
1E23   20 20 20 4E 6F 76 20 32 30 31 38 07 0D 0A 0A DB   '   Nov 2018',bel,cr,lf,lf   
1E32   00                     DB   nul   
1E33   3F 20        CLMSG:    DB   '? '   
1E35   00                     DB   nul   
1E36   45 72 72 6F 72 20 20 28 3F 20 66 6F 72 20 48 45 4C 50 29 0D 0A ERRMSG:   DB   'Error  (? for HELP)',cr,lf   
1E4B   00                     DB   nul   
1E4C   0D 0A        HLPMSG:   DB   cr,lf   
1E4E   43 6F 6D 6D 61 6E 64 73 0D 0A DB   'Commands',cr,lf   
1E58   3D 3D 3D 3D 3D 3D 3D 3D 0D 0A DB   '========',cr,lf   
1E62   44 20 62 62 62 62 20 65 65 65 65 20 3C 65 6E 74 65 72 3E 20 20 44 69 73 70 6C 61 79 20 4D 65 6D 6F 72 79 0D 0A DB   'D bbbb eeee <enter>  Display Memory',cr,lf   
1E87   45 20 61 61 61 61 20 3C 65 6E 74 65 72 3E 20 20 20 20 20 20 20 45 64 69 74 20 4D 65 6D 6F 72 79 0D 0A DB   'E aaaa <enter>       Edit Memory',cr,lf   
1EA9   20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 3C 65 6E 74 65 72 3E 20 4E 6F 20 43 68 61 6E 67 65 0D 0A DB   '                     <enter> No Change',cr,lf   
1ED1   20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 3C 2E 3E 20 45 78 69 74 0D 0A DB   '                     <.> Exit',cr,lf   
1EF0   47 20 61 61 61 61 20 3C 65 6E 74 65 72 3E 20 20 20 20 20 20 20 47 6F 54 6F 20 28 45 78 65 63 75 74 65 29 20 4D 65 6D 6F 72 79 0D 0A DB   'G aaaa <enter>       GoTo (Execute) Memory',cr,lf   
1F1C   00                     DB   nul   
1F1D   20 20 20 20 20 30 30 20 30 31 20 30 32 20 30 33 20 30 34 20 30 35 20 30 36 20 30 37 20 30 38 20 DUMPHD:   DB   '     00 01 02 03 04 05 06 07 08 '   
1F3D   30 39 20 30 41 20 30 42 20 30 43 20 30 44 20 30 45 20 30 46 20 DB   '09 0A 0B 0C 0D 0E 0F '   
1F52   30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 0D 0A DB   '0123456789ABCDEF',cr,lf   
1F64   00                     DB   nul   
1F65                             ; 
1F65                             ;*****
1F65                             ;* RAM
1F65                             ;*
8000                          .ORG   8000h   
8000                CLBUF:    DS   12   ; Command Line Buffer (String - Null Delimited)
800C   00           CLBUFE:   DB   0   ; Command Line Buffer End and Space for Null Delimeter
800D   00 00        ADDRBEG:   DW   0   ; Address Begin
800F   00 00        ADDREND:   DW   0   ; Address End
8011                             ; 
8011                             ;*****
8011                             ;* STACK
8011                             ;*
FE00                          .ORG   0FE00h   
FE00                          DS   100h   
FF00                SPINIT:   EQU   $   


NUL:                0000 DEFINED AT LINE 4
                    > USED AT LINE 313
                    > USED AT LINE 417
                    > USED AT LINE 419
                    > USED AT LINE 421
                    > USED AT LINE 430
                    > USED AT LINE 434
BEL:                0007 DEFINED AT LINE 5
                    > USED AT LINE 415
                    > USED AT LINE 416
BS:                 0008 DEFINED AT LINE 6
                    > USED AT LINE 292
HT:                 0009 DEFINED AT LINE 7
LF:                 000A DEFINED AT LINE 8
                    > USED AT LINE 397
                    > USED AT LINE 414
                    > USED AT LINE 422
FF:                 000C DEFINED AT LINE 9
CR:                 000D DEFINED AT LINE 10
                    > USED AT LINE 290
                    > USED AT LINE 395
                    > USED AT LINE 414
                    > USED AT LINE 420
                    > USED AT LINE 422
                    > USED AT LINE 423
                    > USED AT LINE 424
                    > USED AT LINE 425
                    > USED AT LINE 426
                    > USED AT LINE 427
                    > USED AT LINE 428
                    > USED AT LINE 429
                    > USED AT LINE 433
ESC:                001B DEFINED AT LINE 11
SIODATA:            0080 DEFINED AT LINE 13
                    > USED AT LINE 239
                    > USED AT LINE 326
SIOST:              0081 DEFINED AT LINE 15
                    > USED AT LINE 235
                    > USED AT LINE 323
SIOSTTXRDY:         0001 DEFINED AT LINE 16
SIOSTRXRDY:         0002 DEFINED AT LINE 17
                    > USED AT LINE 324
SIOSTTXE:           0004 DEFINED AT LINE 18
                    > USED AT LINE 236
SIOMO:              0081 DEFINED AT LINE 20
                    > USED AT LINE 73
                    > USED AT LINE 74
                    > USED AT LINE 75
                    > USED AT LINE 79
SIOMOS1:            0040 DEFINED AT LINE 21
                    > USED AT LINE 34
SIOMOS15:           0080 DEFINED AT LINE 22
SIOMOS2:            00C0 DEFINED AT LINE 23
SIOMOPE:            0020 DEFINED AT LINE 24
SIOMOPEN:           0010 DEFINED AT LINE 25
SIOMOC5:            0000 DEFINED AT LINE 26
SIOMOC6:            0004 DEFINED AT LINE 27
SIOMOC7:            0008 DEFINED AT LINE 28
SIOMOC8:            000C DEFINED AT LINE 29
                    > USED AT LINE 34
SIOMOBS:            0000 DEFINED AT LINE 30
SIOMOB1X:           0001 DEFINED AT LINE 31
SIOMOB16X:          0002 DEFINED AT LINE 32
                    > USED AT LINE 34
SIOMOB64X:          0003 DEFINED AT LINE 33
SIOMOI:             004E DEFINED AT LINE 34
                    > USED AT LINE 78
SIOCMD:             0081 DEFINED AT LINE 36
                    > USED AT LINE 77
                    > USED AT LINE 81
                    > USED AT LINE 281
                    > USED AT LINE 316
SIOCMDTXEN:         0001 DEFINED AT LINE 37
                    > USED AT LINE 43
SIOCMDDTR:          0002 DEFINED AT LINE 38
                    > USED AT LINE 43
SIOCMDRXEN:         0004 DEFINED AT LINE 39
                    > USED AT LINE 280
SIOCMDER:           0010 DEFINED AT LINE 40
                    > USED AT LINE 43
SIOCMDRTS:          0020 DEFINED AT LINE 41
                    > USED AT LINE 43
SIOCMDIR:           0040 DEFINED AT LINE 42
                    > USED AT LINE 76
SIOCMDI:            0033 DEFINED AT LINE 43
                    > USED AT LINE 80
                    > USED AT LINE 280
                    > USED AT LINE 315
INIT:               0100 DEFINED AT LINE 70
                    > USED AT LINE 49
                    > USED AT LINE 51
                    > USED AT LINE 53
                    > USED AT LINE 55
                    > USED AT LINE 57
                    > USED AT LINE 59
                    > USED AT LINE 61
                    > USED AT LINE 63
SIOINIT:            0103 DEFINED AT LINE 72
MONINIT:            0116 DEFINED AT LINE 83
MAIN:               011C DEFINED AT LINE 89
                    > USED AT LINE 110
                    > USED AT LINE 117
                    > USED AT LINE 173
                    > USED AT LINE 208
PARSE:              012B DEFINED AT LINE 94
ERROR:              0141 DEFINED AT LINE 108
                    > USED AT LINE 124
                    > USED AT LINE 132
                    > USED AT LINE 180
                    > USED AT LINE 222
HELP:               014A DEFINED AT LINE 115
                    > USED AT LINE 97
                    > USED AT LINE 210
DUMP:               0153 DEFINED AT LINE 123
                    > USED AT LINE 99
DUMPNL:             0176 DEFINED AT LINE 140
                    > USED AT LINE 172
DUMPBT:             0188 DEFINED AT LINE 148
                    > USED AT LINE 154
DUMPCH:             019B DEFINED AT LINE 157
                    > USED AT LINE 166
DUMPCH1:            01A7 DEFINED AT LINE 163
                    > USED AT LINE 160
DUMPCH2:            01A9 DEFINED AT LINE 164
                    > USED AT LINE 162
EDIT:               01C3 DEFINED AT LINE 179
                    > USED AT LINE 101
EDITNL:             01CD DEFINED AT LINE 183
                    > USED AT LINE 203
EDITNL1:            01F6 DEFINED AT LINE 200
                    > USED AT LINE 206
                    > USED AT LINE 215
EDITCMD:            0200 DEFINED AT LINE 204
                    > USED AT LINE 197
GOTO:               0220 DEFINED AT LINE 221
                    > USED AT LINE 103
SOUTC:              1800 DEFINED AT LINE 234
                    > USED AT LINE 146
                    > USED AT LINE 152
                    > USED AT LINE 164
                    > USED AT LINE 188
                    > USED AT LINE 192
                    > USED AT LINE 237
                    > USED AT LINE 248
                    > USED AT LINE 265
                    > USED AT LINE 272
                    > USED AT LINE 303
                    > USED AT LINE 396
                    > USED AT LINE 398
SOUTSTR:            180C DEFINED AT LINE 245
                    > USED AT LINE 84
                    > USED AT LINE 90
                    > USED AT LINE 109
                    > USED AT LINE 116
                    > USED AT LINE 139
                    > USED AT LINE 212
                    > USED AT LINE 250
SOUTHEXB:           1816 DEFINED AT LINE 255
                    > USED AT LINE 142
                    > USED AT LINE 144
                    > USED AT LINE 150
                    > USED AT LINE 184
                    > USED AT LINE 186
                    > USED AT LINE 190
SOUTHEXB1:          1826 DEFINED AT LINE 265
                    > USED AT LINE 263
SOUTHEXB2:          1835 DEFINED AT LINE 272
                    > USED AT LINE 270
SINSTR:             1838 DEFINED AT LINE 278
                    > USED AT LINE 93
                    > USED AT LINE 195
                    > USED AT LINE 307
SINSTRCB:           183E DEFINED AT LINE 282
                    > USED AT LINE 284
SINSTRGC:           1847 DEFINED AT LINE 288
                    > USED AT LINE 295
                    > USED AT LINE 298
                    > USED AT LINE 304
SINSTRECHO:         1863 DEFINED AT LINE 303
                    > USED AT LINE 312
SINSTRBS:           1869 DEFINED AT LINE 305
                    > USED AT LINE 293
SINSTRX:            1876 DEFINED AT LINE 313
                    > USED AT LINE 291
SINC:               1883 DEFINED AT LINE 323
                    > USED AT LINE 288
                    > USED AT LINE 325
STR2UPR:            188F DEFINED AT LINE 333
                    > USED AT LINE 318
STR2UPRN:           1890 DEFINED AT LINE 334
                    > USED AT LINE 345
STR2UPR1:           18A3 DEFINED AT LINE 344
                    > USED AT LINE 338
                    > USED AT LINE 340
STR2UPRX:           18A7 DEFINED AT LINE 346
                    > USED AT LINE 336
S2W:                18A9 DEFINED AT LINE 354
                    > USED AT LINE 123
                    > USED AT LINE 131
                    > USED AT LINE 179
                    > USED AT LINE 196
                    > USED AT LINE 221
S2WNC:              18AD DEFINED AT LINE 356
                    > USED AT LINE 384
S2WDIG:             18C8 DEFINED AT LINE 368
                    > USED AT LINE 362
S2WDIG1:            18CD DEFINED AT LINE 371
                    > USED AT LINE 379
S2WINC:             18DB DEFINED AT LINE 383
                    > USED AT LINE 387
S2WDEL:             18DF DEFINED AT LINE 385
                    > USED AT LINE 360
                    > USED AT LINE 364
                    > USED AT LINE 367
S2WX:               18E4 DEFINED AT LINE 388
                    > USED AT LINE 358
SOUTCRLF:           18E7 DEFINED AT LINE 395
                    > USED AT LINE 167
                    > USED AT LINE 213
                    > USED AT LINE 314
CMPHLDE:            18F1 DEFINED AT LINE 403
                    > USED AT LINE 171
GRTMSG:             1E00 DEFINED AT LINE 414
                    > USED AT LINE 83
CLMSG:              1E33 DEFINED AT LINE 418
                    > USED AT LINE 89
                    > USED AT LINE 211
ERRMSG:             1E36 DEFINED AT LINE 420
                    > USED AT LINE 108
HLPMSG:             1E4C DEFINED AT LINE 422
                    > USED AT LINE 115
DUMPHD:             1F1D DEFINED AT LINE 431
                    > USED AT LINE 138
CLBUF:              8000 DEFINED AT LINE 441
                    > USED AT LINE 91
                    > USED AT LINE 92
                    > USED AT LINE 193
                    > USED AT LINE 204
CLBUFE:             800C DEFINED AT LINE 442
                    > USED AT LINE 92
ADDRBEG:            800D DEFINED AT LINE 443
                    > USED AT LINE 129
                    > USED AT LINE 140
                    > USED AT LINE 155
                    > USED AT LINE 168
                    > USED AT LINE 182
                    > USED AT LINE 198
                    > USED AT LINE 200
                    > USED AT LINE 202
                    > USED AT LINE 214
ADDREND:            800F DEFINED AT LINE 444
                    > USED AT LINE 137
                    > USED AT LINE 170
SPINIT:             FF00 DEFINED AT LINE 452
                    > USED AT LINE 70
